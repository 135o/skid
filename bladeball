RunService.PreSimulation:Connect(function(dt)
    local ball = findBall()
    local hrp = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not ball or not hrp then return end

    local velocity = ball.zoomies.VectorVelocity
    local speed = velocity.Magnitude
    local currentPosition = ball.Position
    local acceleration = ball.AssemblyLinearVelocity - velocity
    
    local lookaheadTime = math.clamp(0.2 + speed / 150, 0.2, 0.7)  -- Increased lookahead time to allow for later predictions

    local predictedPosition = currentPosition + (velocity * lookaheadTime) + (0.5 * acceleration * lookaheadTime ^ 2)
    local predictedDistance = (predictedPosition - hrp.Position).Magnitude

    local baseRange = math.log(speed + 1) * 6
    local parryRange = math.clamp(baseRange, 10, 150)  -- Adjusted parry range for more controlled timing

    debugSphere.Position = hrp.Position
    debugSphere.Size = Vector3.new(parryRange * 2, parryRange * 2, parryRange * 2)

    local targetName = ball:GetAttribute("target")

    labels.Velocity.Text = "Velocity: " .. string.format("%.0f", speed)
    labels.Scale.Text = "Scale: " .. string.format("%.0f", parryRange)
    labels.Distance.Text = "Distance: " .. string.format("%.0f", predictedDistance)
    labels.BallPos.Text = "BallPos: " .. formatVector3(currentPosition)
    labels.PlayerPos.Text = "PlayerPos: " .. formatVector3(hrp.Position)
    labels.Target.Text = "Target: " .. (targetName or "N/A")

    if targetName == localPlayer.Name and not isParried and predictedDistance <= parryRange then
        local mousePos = Vector2.new(0, 0)
        VirtualInputManager:SendMouseButtonEvent(mousePos.X, mousePos.Y, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(mousePos.X, mousePos.Y, 0, false, game, 0)
        isParried = true
    end
end)
